#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
#set -e

# debug
set -ex

# parse and derive params
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2
NETTLE_VERSION=3.4.1
P11_KIT_VERSION=0.23.15
LIBTASN1_VERSION=4.13

function indent() {
	c='s/^/       /'

	case $(uname) in
		Darwin)
			sed -l "$c"
			;;
		*)
			sed -u "$c"
			;;
	esac
}

function topic() {
	echo "-----> $*"
}



BUILDS_CACHE_DIR="$CACHE_DIR/gnutls-builds"

# Store which STACK we are running on in the cache to bust the cache if it changes
if [ -f $CACHE_DIR/.apt/STACK ]; then
  CACHED_STACK=$(cat "$CACHE_DIR/.apt/STACK")
else
  CACHED_STACK=$STACK
fi

if
	[[ $CACHED_STACK == $STACK ]]
then
	# STACK has not changed
	topic "Reusing cache"
else
	# STACK changed
	topic "Detected Stack changes, flushing cache"

	rm -rf $BUILDS_CACHE_DIR
fi



mkdir -p $BUILD_DIR/.apt



#give environment to later buildpacks
export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH|GUILE_LOAD_PATH)=' > "$LP_DIR/export"



cd /tmp

topic "Installing Nettle"
wget -c https://ftp.gnu.org/gnu/nettle/nettle-$NETTLE_VERSION.tar.gz && \
	tar xvzf nettle-$NETTLE_VERSION.tar.gz                             && \
	rm -f nettle-$NETTLE_VERSION.tar.gz                                && \
	cd nettle-$NETTLE_VERSION                                          && \
	./configure --prefix=$BUILD_DIR/.apt/usr && make && make install && cd ..


topic "Installing libtasn1"
wget -c https://ftp.gnu.org/gnu/libtasn1/libtasn1-$LIBTASN1_VERSION.tar.gz  && \
	tar xvzf libtasn1-$LIBTASN1_VERSION.tar.gz                                && \
	rm -f libtasn1-$LIBTASN1_VERSION.tar.gz                                   && \
	cd libtasn1-$LIBTASN1_VERSION                                             && \
	./configure --prefix=$BUILD_DIR/.apt/usr && make && make install && cd ..


topic "Installing p11-kit"
wget -c https://github.com/p11-glue/p11-kit/releases/download/$P11_KIT_VERSION/p11-kit-$P11_KIT_VERSION.tar.gz && \
	tar xvzf p11-kit-$P11_KIT_VERSION.tar.gz                                                                     && \
	rm -f p11-kit-$P11_KIT_VERSION.tar.gz                                                                        && \
	cd p11-kit-$P11_KIT_VERSION && ./configure --prefix=$BUILD_DIR/.apt/usr && make && make install && cd ..


topic "Installing Unbound"
wget -c https://nlnetlabs.nl/downloads/unbound/unbound-1.9.4.tar.gz && \
	tar xvzf unbound-1.9.4.tar.gz                                     && \
	rm -f unbound-1.9.4.tar.gz                                        && \
	cd unbound-1.9.4                                                  && \
	./configure --prefix=$BUILD_DIR/.apt/usr && make && make install && cd ..


# topic "Installing Autogen"
# if
# 	[ ! -d "$BUILDS_CACHE_DIR/autogen-5.18.7" ]
# then
# 	wget -c ftp://ftp.gnu.org/gnu/autogen/autogen-5.18.7.tar.xz             && \
# 		tar xJf autogen-5.18.7.tar.xz                                         && \
# 		rm -f autogen-5.18.7.tar.xz
# fi

# cd autogen-5.18.7 && ./configure --prefix=$BUILD_DIR/.apt/usr && make && make install && cd ..
#https://trac.macports.org/ticket/54112


topic "Installing GnuTLS"
if
	[ ! -d "$BUILDS_CACHE_DIR/gnutls-3.6.7" ]
then
	wget -c https://www.gnupg.org/ftp/gcrypt/gnutls/v3.6/gnutls-3.6.7.tar.xz && \
		tar xJf gnutls-3.6.7.tar.xz                                            && \
		rm -f gnutls-3.6.7.tar.xz
fi

cd gnutls-3.6.7 && ./configure --prefix=$BUILD_DIR/.apt/usr --enable-guile GUILE="$BUILD_DIR/.apt/usr/bin/guile" && make && make install && cd ..
